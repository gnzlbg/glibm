trigger: ["dev"]
pr: ["dev"]

jobs:
  - job: Docker
    pool:
      vmImage: ubuntu-16.04
    steps:
      - template: ci/azure-install-rust.yml
      - bash: rustup target add $TARGET
        displayName: "add cross target"
      - bash: rustup target add x86_64-unknown-linux-musl
        displayName: "add musl target"
      - bash: cargo generate-lockfile && ./ci/run-docker.sh $TARGET
        displayName: "run tests"
    strategy:
      matrix:
        aarch64:
          TARGET: aarch64-unknown-linux-gnu
        arm:
          TARGET: arm-unknown-linux-gnueabi
        armhf:
          TARGET: arm-unknown-linux-gnueabihf
        armv7:
          TARGET: armv7-unknown-linux-gnueabihf
        i686:
          TARGET: i686-unknown-linux-gnu
        mips:
          TARGET: mips-unknown-linux-gnu
        mips64el:
          TARGET: mips64el-unknown-linux-gnuabi64
        powerpc64le:
          TARGET: powerpc64le-unknown-linux-gnu
        wasm32:
          TARGET: wasm32-unknown-unknown
        x86_64:
          TARGET: x86_64-unknown-linux-gnu
    variables:
      TOOLCHAIN: nightly

  - job: tools
    pool:
      vmImage: ubuntu-16.04
    steps:
      - template: ci/azure-install-rust.yml
      - bash: rustup component add rustfmt
        displayName: "install rustfmt"
      - bash: cargo fmt --all -- --check
        displayName: "check formatting"
      - bash: rustup component add clippy
        displayName: "install clippy"
      - bash: cargo clippy --all -- -D clippy::pedantic
        displayName: "check clippy"
      - bash: cargo build -p cb
        displayName: "Check compiler-builtins still probably builds"
      - bash: cargo bench --all
        displayName: "Benchmarks"
